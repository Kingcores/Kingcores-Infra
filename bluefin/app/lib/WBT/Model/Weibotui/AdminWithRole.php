<?php
//Don't edit this file which is generated by Bluefin Lance.
//You can put custom business logic into a Business class under WBT\Business namespace.
namespace WBT\Model\Weibotui;

use Bluefin\App;
use Bluefin\Convention;
use Bluefin\VarText;
use Bluefin\Data\Type;
use Bluefin\Data\Model;
use Bluefin\Data\Database;
use Bluefin\Data\ModelMetadata;
use Bluefin\Data\DbExpr;

class AdminWithRole extends Model
{
    const ADMIN_WITH_ROLE_ID = 'admin_with_role_id';
    const _CREATED_AT = '_created_at';
    const ADMIN = 'admin';
    const ROLE = 'role';

    const WITH_ADMIN = 'admin_with_role.admin:admin.admin_id';
    const WITH_ROLE = 'admin_with_role.role:admin_role.role_name';


    protected static $__metadata;

    /**
     * @static
     * @return \Bluefin\Data\ModelMetadata
     */
    public static function s_metadata()
    {
        if (!isset(self::$__metadata))
        {
            self::$__metadata = new ModelMetadata(
                'weibotui',
                'admin_with_role',
                'admin_with_role_id',
                [
                    'admin_with_role_id' => ['name' => _META_('weibotui.admin_with_role.admin_with_role_id'), 'type' => 'int', 'length' => 10, 'min' => 1, 'required' => true, 'db_insert' => true, 'rou' => true],
                    '_created_at' => ['name' => _META_('weibotui.admin_with_role._created_at'), 'type' => 'timestamp', 'required' => true, 'default' => new DbExpr('NOW()'), 'roc' => true, 'rou' => true],
                    'admin' => ['name' => _META_('weibotui.admin_with_role.admin'), 'type' => 'int', 'length' => 10, 'min' => 1000, 'required' => true],
                    'role' => ['name' => _META_('weibotui.admin_with_role.role'), 'type' => 'idname', 'required' => true],
                ],
                [
                    'auto_increment_id' => 'admin_with_role_id',
                    'create_timestamp' => '_created_at',
                    'unique_keys' => [['admin', 'role']],
                ],
                [
                    'admin' => self::WITH_ADMIN,
                    'role' => self::WITH_ROLE,
                ],
                [
                ],
                [
                    Model::OP_CREATE => NULL,
                    Model::OP_GET => NULL,
                    Model::OP_UPDATE => NULL,
                    Model::OP_DELETE => NULL,
                ]
            );
        }

        return self::$__metadata;
    }

    public function __construct($condition = null)
    {
        parent::__construct(self::s_metadata());

        if (isset($condition))
        {
            $this->load($condition);
        }
        else
        {
            $this->reset();
        }
    }

    /**
     * Gets id
     * @return int
     */
    public function getAdminWithRoleID()
    {
        return $this->__get(self::ADMIN_WITH_ROLE_ID);
    }

    /**
     * Sets id
     * @param int $value
     * @return AdminWithRole
     */
    public function setAdminWithRoleID($value)
    {
        $this->__set(self::ADMIN_WITH_ROLE_ID, $value);

        return $this;
    }

    /**
     * Gets createdat
     * @return string
     */
    public function getCreatedAt()
    {
        return $this->__get(self::_CREATED_AT);
    }

    /**
     * Sets createdat
     * @param string $value
     * @return AdminWithRole
     */
    public function setCreatedAt($value)
    {
        $this->__set(self::_CREATED_AT, $value);

        return $this;
    }

    /**
     * Gets 内部用户
     * @return int
     */
    public function getAdmin()
    {
        return $this->__get(self::ADMIN);
    }

    /**
     * Sets 内部用户
     * @param int $value
     * @return AdminWithRole
     */
    public function setAdmin($value)
    {
        $this->__set(self::ADMIN, $value);

        return $this;
    }

    /**
     * Gets 内部用户角色
     * @return string
     */
    public function getRole()
    {
        return $this->__get(self::ROLE);
    }

    /**
     * Sets 内部用户角色
     * @param string $value
     * @return AdminWithRole
     */
    public function setRole($value)
    {
        $this->__set(self::ROLE, $value);

        return $this;
    }

    /**
     * @param bool $new
     * @return \WBT\Model\Weibotui\Admin
     */
    public function getAdmin_($new = false)
    {
        if ($new)
        {
            return new \WBT\Model\Weibotui\Admin();
        }

        if (isset($this->_links['admin']))
        {
            return $this->_links['admin'];
        }

        return ($this->_links['admin'] = new \WBT\Model\Weibotui\Admin($this->getAdmin()));
    }

    /**
     * @param bool $new
     * @return \WBT\Model\Weibotui\AdminRole
     */
    public function getRole_($new = false)
    {
        if ($new)
        {
            return new \WBT\Model\Weibotui\AdminRole();
        }

        if (isset($this->_links['role']))
        {
            return $this->_links['role'];
        }

        return ($this->_links['role'] = new \WBT\Model\Weibotui\AdminRole($this->getRole()));
    }
}
?>