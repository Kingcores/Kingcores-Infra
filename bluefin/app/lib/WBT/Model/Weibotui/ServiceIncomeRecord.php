<?php
//Don't edit this file which is generated by Bluefin Lance.
//You can put custom business logic into a Business class under WBT\Business namespace.
namespace WBT\Model\Weibotui;

use Bluefin\App;
use Bluefin\Convention;
use Bluefin\VarText;
use Bluefin\Data\Type;
use Bluefin\Data\Model;
use Bluefin\Data\Database;
use Bluefin\Data\ModelMetadata;
use Bluefin\Data\DbExpr;

class ServiceIncomeRecord extends Model
{
    const SERVICE_INCOME_RECORD_ID = 'service_income_record_id';
    const _CREATED_AT = '_created_at';
    const SERVICE_CHARGE = 'service_charge';
    const INCOME_BALANCE = 'income_balance';
    const CONSUMER_EXPENSE = 'consumer_expense';
    const SUPPLIER_INCOME = 'supplier_income';

    const WITH_CONSUMER_EXPENSE = 'service_income_record.consumer_expense:user_expense_record.serial_no';
    const WITH_SUPPLIER_INCOME = 'service_income_record.supplier_income:user_income_record.serial_no';


    protected static $__metadata;

    /**
     * @static
     * @return \Bluefin\Data\ModelMetadata
     */
    public static function s_metadata()
    {
        if (!isset(self::$__metadata))
        {
            self::$__metadata = new ModelMetadata(
                'weibotui',
                'service_income_record',
                'service_income_record_id',
                [
                    'service_income_record_id' => ['name' => _META_('weibotui.service_income_record.service_income_record_id'), 'type' => 'int', 'length' => 10, 'min' => 1, 'required' => true, 'db_insert' => true, 'rou' => true],
                    '_created_at' => ['name' => _META_('weibotui.service_income_record._created_at'), 'type' => 'timestamp', 'required' => true, 'default' => new DbExpr('NOW()'), 'roc' => true, 'rou' => true],
                    'service_charge' => ['name' => _META_('weibotui.service_income_record.service_charge'), 'type' => 'money', 'precision' => 2, 'required' => true],
                    'income_balance' => ['name' => _META_('weibotui.service_income_record.income_balance'), 'type' => 'money', 'default' => new \Bluefin\Data\InvalidData(), 'precision' => 2, 'required' => true],
                    'consumer_expense' => ['name' => _META_('weibotui.service_income_record.consumer_expense'), 'type' => 'text', 'length' => 20, 'required' => true],
                    'supplier_income' => ['name' => _META_('weibotui.service_income_record.supplier_income'), 'type' => 'text', 'length' => 20, 'required' => true],
                ],
                [
                    'auto_increment_id' => 'service_income_record_id',
                    'create_timestamp' => '_created_at',
                    'triggers' => ['BEFORE-INSERT']
                ],
                [
                    'consumer_expense' => self::WITH_CONSUMER_EXPENSE,
                    'supplier_income' => self::WITH_SUPPLIER_INCOME,
                ],
                [
                ],
                [
                    Model::OP_CREATE => NULL,
                    Model::OP_GET => NULL,
                    Model::OP_UPDATE => NULL,
                    Model::OP_DELETE => NULL,
                ]
            );
        }

        return self::$__metadata;
    }

    public function __construct($condition = null)
    {
        parent::__construct(self::s_metadata());

        if (isset($condition))
        {
            $this->load($condition);
        }
        else
        {
            $this->reset();
        }
    }

    /**
     * Gets id
     * @return int
     */
    public function getServiceIncomeRecordID()
    {
        return $this->__get(self::SERVICE_INCOME_RECORD_ID);
    }

    /**
     * Sets id
     * @param int $value
     * @return ServiceIncomeRecord
     */
    public function setServiceIncomeRecordID($value)
    {
        $this->__set(self::SERVICE_INCOME_RECORD_ID, $value);

        return $this;
    }

    /**
     * Gets createdat
     * @return string
     */
    public function getCreatedAt()
    {
        return $this->__get(self::_CREATED_AT);
    }

    /**
     * Sets createdat
     * @param string $value
     * @return ServiceIncomeRecord
     */
    public function setCreatedAt($value)
    {
        $this->__set(self::_CREATED_AT, $value);

        return $this;
    }

    /**
     * Gets 服务费金额
     * @return float
     */
    public function getServiceCharge()
    {
        return $this->__get(self::SERVICE_CHARGE);
    }

    /**
     * Sets 服务费金额
     * @param float $value
     * @return ServiceIncomeRecord
     */
    public function setServiceCharge($value)
    {
        $this->__set(self::SERVICE_CHARGE, $value);

        return $this;
    }

    /**
     * Gets 收入余额
     * @return float
     */
    public function getIncomeBalance()
    {
        return $this->__get(self::INCOME_BALANCE);
    }

    /**
     * Sets 收入余额
     * @param float $value
     * @return ServiceIncomeRecord
     */
    public function setIncomeBalance($value)
    {
        $this->__set(self::INCOME_BALANCE, $value);

        return $this;
    }

    /**
     * Gets 用户支出记录
     * @return string
     */
    public function getConsumerExpense()
    {
        return $this->__get(self::CONSUMER_EXPENSE);
    }

    /**
     * Sets 用户支出记录
     * @param string $value
     * @return ServiceIncomeRecord
     */
    public function setConsumerExpense($value)
    {
        $this->__set(self::CONSUMER_EXPENSE, $value);

        return $this;
    }

    /**
     * Gets 用户收入记录
     * @return string
     */
    public function getSupplierIncome()
    {
        return $this->__get(self::SUPPLIER_INCOME);
    }

    /**
     * Sets 用户收入记录
     * @param string $value
     * @return ServiceIncomeRecord
     */
    public function setSupplierIncome($value)
    {
        $this->__set(self::SUPPLIER_INCOME, $value);

        return $this;
    }

    /**
     * @param bool $new
     * @return \WBT\Model\Weibotui\UserExpenseRecord
     */
    public function getConsumerExpense_($new = false)
    {
        if ($new)
        {
            return new \WBT\Model\Weibotui\UserExpenseRecord();
        }

        if (isset($this->_links['consumer_expense']))
        {
            return $this->_links['consumer_expense'];
        }

        return ($this->_links['consumer_expense'] = new \WBT\Model\Weibotui\UserExpenseRecord($this->getConsumerExpense()));
    }

    /**
     * @param bool $new
     * @return \WBT\Model\Weibotui\UserIncomeRecord
     */
    public function getSupplierIncome_($new = false)
    {
        if ($new)
        {
            return new \WBT\Model\Weibotui\UserIncomeRecord();
        }

        if (isset($this->_links['supplier_income']))
        {
            return $this->_links['supplier_income'];
        }

        return ($this->_links['supplier_income'] = new \WBT\Model\Weibotui\UserIncomeRecord($this->getSupplierIncome()));
    }

    protected function _beforeInsert()
    {
        App::getInstance()->log()->verbose('ServiceIncomeRecord::_beforeInsert', 'diag');
        //更新收入余额
        $serviceIncomeRecord = new ServiceIncomeRecord('*LATEST*');
        $lastIncomeBalance = $serviceIncomeRecord->isEmpty() ? 0 : $serviceIncomeRecord->income_balance;
        $this->income_balance = $lastIncomeBalance + $this->service_charge;
        
    }
}
?>