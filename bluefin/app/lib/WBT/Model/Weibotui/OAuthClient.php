<?php
//Don't edit this file which is generated by Bluefin Lance.
//You can put custom business logic into a Business class under WBT\Business namespace.
namespace WBT\Model\Weibotui;

use Bluefin\App;
use Bluefin\Convention;
use Bluefin\VarText;
use Bluefin\Data\Type;
use Bluefin\Data\Model;
use Bluefin\Data\Database;
use Bluefin\Data\ModelMetadata;
use Bluefin\Data\DbExpr;

class OAuthClient extends Model
{
    const OAUTH_CLIENT_ID = 'oauth_client_id';
    const NAME = 'name';
    const SECRET = 'secret';
    const REDIRECT_URI = 'redirect_uri';
    const LEVEL = 'level';



    protected static $__metadata;

    /**
     * @static
     * @return \Bluefin\Data\ModelMetadata
     */
    public static function s_metadata()
    {
        if (!isset(self::$__metadata))
        {
            self::$__metadata = new ModelMetadata(
                'weibotui',
                'oauth_client',
                'oauth_client_id',
                [
                    'oauth_client_id' => ['name' => _META_('weibotui.oauth_client.oauth_client_id'), 'type' => 'int', 'length' => 10, 'min' => 10000, 'required' => true, 'db_insert' => true, 'rou' => true],
                    'name' => ['name' => _META_('weibotui.oauth_client.name'), 'type' => 'text', 'min' => 1, 'max' => 20],
                    'secret' => ['name' => _META_('weibotui.oauth_client.secret'), 'type' => 'text', 'length' => 32, 'required' => true],
                    'redirect_uri' => ['name' => _META_('weibotui.oauth_client.redirect_uri'), 'type' => 'url', 'required' => true],
                    'level' => ['name' => _META_('weibotui.oauth_client.level'), 'type' => 'text', 'max' => 20, 'required' => true, 'enum' => new OAuthClientLevel(), 'db_insert' => true],
                ],
                [
                    'auto_increment_id' => 'oauth_client_id',
                ],
                [
                ],
                [
                ],
                [
                    Model::OP_CREATE => NULL,
                    Model::OP_GET => NULL,
                    Model::OP_UPDATE => NULL,
                    Model::OP_DELETE => NULL,
                ]
            );
        }

        return self::$__metadata;
    }

    public function __construct($condition = null)
    {
        parent::__construct(self::s_metadata());

        if (isset($condition))
        {
            $this->load($condition);
        }
        else
        {
            $this->reset();
        }
    }

    /**
     * Gets id
     * @return int
     */
    public function getOAuthClientID()
    {
        return $this->__get(self::OAUTH_CLIENT_ID);
    }

    /**
     * Sets id
     * @param int $value
     * @return OAuthClient
     */
    public function setOAuthClientID($value)
    {
        $this->__set(self::OAUTH_CLIENT_ID, $value);

        return $this;
    }

    /**
     * Gets 客户端名称
     * @return string
     */
    public function getName()
    {
        return $this->__get(self::NAME);
    }

    /**
     * Sets 客户端名称
     * @param string $value
     * @return OAuthClient
     */
    public function setName($value)
    {
        $this->__set(self::NAME, $value);

        return $this;
    }

    /**
     * Gets 密钥
     * @return string
     */
    public function getSecret()
    {
        return $this->__get(self::SECRET);
    }

    /**
     * Sets 密钥
     * @param string $value
     * @return OAuthClient
     */
    public function setSecret($value)
    {
        $this->__set(self::SECRET, $value);

        return $this;
    }

    /**
     * Gets 回调地址
     * @return string
     */
    public function getRedirectUri()
    {
        return $this->__get(self::REDIRECT_URI);
    }

    /**
     * Sets 回调地址
     * @param string $value
     * @return OAuthClient
     */
    public function setRedirectUri($value)
    {
        $this->__set(self::REDIRECT_URI, $value);

        return $this;
    }

    /**
     * Gets 客户端等级
     * @return string
     */
    public function getLevel()
    {
        return $this->__get(self::LEVEL);
    }

    /**
     * Gets 客户端等级 display name
     * @return string
     */
    public function getLevel_EnumValue()
    {
        $option = $this->metadata()->getFilterOption('level');
        return $option['enum']::getDisplayName($this->__get(self::LEVEL));
    }

    /**
     * Sets 客户端等级
     * @param string $value
     * @return OAuthClient
     */
    public function setLevel($value)
    {
        $this->__set(self::LEVEL, $value);

        return $this;
    }
}
?>