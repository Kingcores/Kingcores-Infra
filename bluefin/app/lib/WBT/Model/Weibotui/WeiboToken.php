<?php
//Don't edit this file which is generated by Bluefin Lance.
//You can put custom business logic into a Business class under WBT\Business namespace.
namespace WBT\Model\Weibotui;

use Bluefin\App;
use Bluefin\Convention;
use Bluefin\VarText;
use Bluefin\Data\Type;
use Bluefin\Data\Model;
use Bluefin\Data\Database;
use Bluefin\Data\ModelMetadata;
use Bluefin\Data\DbExpr;

class WeiboToken extends Model
{
    const WEIBO_TOKEN_ID = 'weibo_token_id';
    const _UPDATED_AT = '_updated_at';
    const ACCESS_TOKEN = 'access_token';
    const REFRESH_TOKEN = 'refresh_token';
    const REMIND_IN = 'remind_in';
    const EXPIRES_IN = 'expires_in';
    const APP_KEY = 'app_key';
    const APP_SECRET = 'app_secret';
    const EXPIRES_AT = 'expires_at';
    const WEIBO = 'weibo';

    const WITH_WEIBO = 'weibo_token.weibo:weibo.weibo_id';


    protected static $__metadata;

    /**
     * @static
     * @return \Bluefin\Data\ModelMetadata
     */
    public static function s_metadata()
    {
        if (!isset(self::$__metadata))
        {
            self::$__metadata = new ModelMetadata(
                'weibotui',
                'weibo_token',
                'weibo_token_id',
                [
                    'weibo_token_id' => ['name' => _META_('weibotui.weibo_token.weibo_token_id'), 'type' => 'int', 'length' => 10, 'min' => 1, 'required' => true, 'db_insert' => true, 'rou' => true],
                    '_updated_at' => ['name' => _META_('weibotui.weibo_token._updated_at'), 'type' => 'timestamp', 'required' => true, 'db_insert' => true, 'roc' => true, 'rou' => true],
                    'access_token' => ['name' => _META_('weibotui.weibo_token.access_token'), 'type' => 'password', 'required' => true],
                    'refresh_token' => ['name' => _META_('weibotui.weibo_token.refresh_token'), 'type' => 'password'],
                    'remind_in' => ['name' => _META_('weibotui.weibo_token.remind_in'), 'type' => 'int', 'required' => true],
                    'expires_in' => ['name' => _META_('weibotui.weibo_token.expires_in'), 'type' => 'int', 'required' => true],
                    'app_key' => ['name' => _META_('weibotui.weibo_token.app_key'), 'type' => 'text', 'max' => 20, 'required' => true],
                    'app_secret' => ['name' => _META_('weibotui.weibo_token.app_secret'), 'type' => 'password', 'required' => true],
                    'expires_at' => ['name' => _META_('weibotui.weibo_token.expires_at'), 'type' => 'datetime', 'default' => new DbExpr("DATE_ADD('{{app.timestamp|date='Y-m-d H:i:s'}}', INTERVAL {{this.expires_in|='0'}} SECOND)", true), 'required' => true],
                    'weibo' => ['name' => _META_('weibotui.weibo_token.weibo'), 'type' => 'uuid', 'required' => true],
                ],
                [
                    'auto_increment_id' => 'weibo_token_id',
                    'update_timestamp' => '_updated_at',
                    'unique_keys' => [['weibo', 'app_key']],
                ],
                [
                    'weibo' => self::WITH_WEIBO,
                ],
                [
                ],
                [
                    Model::OP_CREATE => NULL,
                    Model::OP_GET => NULL,
                    Model::OP_UPDATE => NULL,
                    Model::OP_DELETE => NULL,
                ]
            );
        }

        return self::$__metadata;
    }

    public function __construct($condition = null)
    {
        parent::__construct(self::s_metadata());

        if (isset($condition))
        {
            $this->load($condition);
        }
        else
        {
            $this->reset();
        }
    }

    /**
     * Gets id
     * @return int
     */
    public function getWeiboTokenID()
    {
        return $this->__get(self::WEIBO_TOKEN_ID);
    }

    /**
     * Sets id
     * @param int $value
     * @return WeiboToken
     */
    public function setWeiboTokenID($value)
    {
        $this->__set(self::WEIBO_TOKEN_ID, $value);

        return $this;
    }

    /**
     * Gets updatedat
     * @return string
     */
    public function getUpdatedAt()
    {
        return $this->__get(self::_UPDATED_AT);
    }

    /**
     * Sets updatedat
     * @param string $value
     * @return WeiboToken
     */
    public function setUpdatedAt($value)
    {
        $this->__set(self::_UPDATED_AT, $value);

        return $this;
    }

    /**
     * Gets 令牌
     * @return string
     */
    public function getAccessToken()
    {
        return $this->__get(self::ACCESS_TOKEN);
    }

    /**
     * Sets 令牌
     * @param string $value
     * @return WeiboToken
     */
    public function setAccessToken($value)
    {
        $this->__set(self::ACCESS_TOKEN, $value);

        return $this;
    }

    /**
     * Gets 刷新令牌
     * @return string
     */
    public function getRefreshToken()
    {
        return $this->__get(self::REFRESH_TOKEN);
    }

    /**
     * Sets 刷新令牌
     * @param string $value
     * @return WeiboToken
     */
    public function setRefreshToken($value)
    {
        $this->__set(self::REFRESH_TOKEN, $value);

        return $this;
    }

    /**
     * Gets 提醒秒数
     * @return int
     */
    public function getRemindIn()
    {
        return $this->__get(self::REMIND_IN);
    }

    /**
     * Sets 提醒秒数
     * @param int $value
     * @return WeiboToken
     */
    public function setRemindIn($value)
    {
        $this->__set(self::REMIND_IN, $value);

        return $this;
    }

    /**
     * Gets 过期秒数
     * @return int
     */
    public function getExpiresIn()
    {
        return $this->__get(self::EXPIRES_IN);
    }

    /**
     * Sets 过期秒数
     * @param int $value
     * @return WeiboToken
     */
    public function setExpiresIn($value)
    {
        $this->__set(self::EXPIRES_IN, $value);

        return $this;
    }

    /**
     * Gets 应用密钥
     * @return string
     */
    public function getAppKey()
    {
        return $this->__get(self::APP_KEY);
    }

    /**
     * Sets 应用密钥
     * @param string $value
     * @return WeiboToken
     */
    public function setAppKey($value)
    {
        $this->__set(self::APP_KEY, $value);

        return $this;
    }

    /**
     * Gets 应用密码
     * @return string
     */
    public function getAppSecret()
    {
        return $this->__get(self::APP_SECRET);
    }

    /**
     * Sets 应用密码
     * @param string $value
     * @return WeiboToken
     */
    public function setAppSecret($value)
    {
        $this->__set(self::APP_SECRET, $value);

        return $this;
    }

    /**
     * Gets 过期时间
     * @return string
     */
    public function getExpiresAt()
    {
        return $this->__get(self::EXPIRES_AT);
    }

    /**
     * Sets 过期时间
     * @param string $value
     * @return WeiboToken
     */
    public function setExpiresAt($value)
    {
        $this->__set(self::EXPIRES_AT, $value);

        return $this;
    }

    /**
     * Gets 微博账号
     * @return string
     */
    public function getWeibo()
    {
        return $this->__get(self::WEIBO);
    }

    /**
     * Sets 微博账号
     * @param string $value
     * @return WeiboToken
     */
    public function setWeibo($value)
    {
        $this->__set(self::WEIBO, $value);

        return $this;
    }

    /**
     * @param bool $new
     * @return \WBT\Model\Weibotui\Weibo
     */
    public function getWeibo_($new = false)
    {
        if ($new)
        {
            return new \WBT\Model\Weibotui\Weibo();
        }

        if (isset($this->_links['weibo']))
        {
            return $this->_links['weibo'];
        }

        return ($this->_links['weibo'] = new \WBT\Model\Weibotui\Weibo($this->getWeibo()));
    }
}
?>