<?php
//Don't edit this file which is generated by Bluefin Lance.
namespace WBT\Model\Weibotui;

use Bluefin\Convention;
use Bluefin\Data\ValidatorInterface;

class UserDepositStatus implements ValidatorInterface
{
    const UNPAID = 'unpaid';
    const WAITING = 'waiting';
    const CANCELLED = 'cancelled';
    const PAID = 'paid';

    private static $_data;

    public static function getDictionary()
    {
        if (!isset(self::$_data))
        {
            self::$_data = array(
                self::UNPAID => _META_('weibotui.user_deposit_status.unpaid'),
                self::WAITING => _META_('weibotui.user_deposit_status.waiting'),
                self::CANCELLED => _META_('weibotui.user_deposit_status.cancelled'),
                self::PAID => _META_('weibotui.user_deposit_status.paid'),
            );
        }

        return self::$_data;
    }

    public static function getStates()
    {
        $data = self::getDictionary();
        return array_keys($data);
    }

    public static function getDisplayName($state)
    {
        $data = self::getDictionary();
        return $data[$state];
    }

    public static function getDefaultValue()
    {
        return self::UNPAID;
    }

    public function validate($value)
    {
        $data = self::getDictionary();
        return array_key_exists($value, $data);
    }
}