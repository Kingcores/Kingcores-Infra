<?php
//Don't edit this file which is generated by Bluefin Lance.
//You can put custom business logic into a Business class under WBT\Business namespace.
namespace WBT\Model\Weibotui;

use Bluefin\App;
use Bluefin\Convention;
use Bluefin\VarText;
use Bluefin\Data\Type;
use Bluefin\Data\Model;
use Bluefin\Data\Database;
use Bluefin\Data\ModelMetadata;
use Bluefin\Data\DbExpr;

class Weibo extends Model
{
    const WEIBO_ID = 'weibo_id';
    const _CREATED_AT = '_created_at';
    const _UPDATED_AT = '_updated_at';
    const UID = 'uid';
    const DISPLAY_NAME = 'display_name';
    const URL = 'url';
    const AVATAR_S = 'avatar_s';
    const AVATAR_L = 'avatar_l';
    const LOCATION = 'location';
    const DESCRIPTION = 'description';
    const PROFILE = 'profile';
    const WBT_HOME = 'wbt_home';
    const NUM_FOLLOWER = 'num_follower';
    const NUM_FOLLOWING = 'num_following';
    const NUM_POST = 'num_post';
    const NUM_LIKE = 'num_like';
    const TYPE = 'type';
    const USER = 'user';
    const GENDER = 'gender';

    const WITH_USER = 'weibo.user:user.user_id';


    protected static $__metadata;

    /**
     * @static
     * @return \Bluefin\Data\ModelMetadata
     */
    public static function s_metadata()
    {
        if (!isset(self::$__metadata))
        {
            self::$__metadata = new ModelMetadata(
                'weibotui',
                'weibo',
                'weibo_id',
                [
                    'weibo_id' => ['name' => _META_('weibotui.weibo.weibo_id'), 'type' => 'uuid', 'default' => new \Bluefin\Data\Functor\AutoUUID(), 'required' => true, 'rou' => true],
                    '_created_at' => ['name' => _META_('weibotui.weibo._created_at'), 'type' => 'timestamp', 'required' => true, 'default' => new DbExpr('NOW()'), 'roc' => true, 'rou' => true],
                    '_updated_at' => ['name' => _META_('weibotui.weibo._updated_at'), 'type' => 'timestamp', 'required' => true, 'db_insert' => true, 'roc' => true, 'rou' => true],
                    'uid' => ['name' => _META_('weibotui.weibo.uid'), 'type' => 'text', 'length' => 64, 'required' => true],
                    'display_name' => ['name' => _META_('weibotui.weibo.display_name'), 'type' => 'text', 'min' => 1, 'max' => 40],
                    'url' => ['name' => _META_('weibotui.weibo.url'), 'type' => 'url', 'required' => true],
                    'avatar_s' => ['name' => _META_('weibotui.weibo.avatar_s'), 'type' => 'url', 'required' => true],
                    'avatar_l' => ['name' => _META_('weibotui.weibo.avatar_l'), 'type' => 'url', 'required' => true],
                    'location' => ['name' => _META_('weibotui.weibo.location'), 'type' => 'text', 'max' => 100, 'required' => true],
                    'description' => ['name' => _META_('weibotui.weibo.description'), 'type' => 'text', 'max' => 200, 'required' => true],
                    'profile' => ['name' => _META_('weibotui.weibo.profile'), 'type' => 'json'],
                    'wbt_home' => ['name' => _META_('weibotui.weibo.wbt_home'), 'type' => 'path', 'required' => true],
                    'num_follower' => ['name' => _META_('weibotui.weibo.num_follower'), 'type' => 'int', 'required' => true],
                    'num_following' => ['name' => _META_('weibotui.weibo.num_following'), 'type' => 'int', 'required' => true],
                    'num_post' => ['name' => _META_('weibotui.weibo.num_post'), 'type' => 'int', 'required' => true],
                    'num_like' => ['name' => _META_('weibotui.weibo.num_like'), 'type' => 'int', 'required' => true],
                    'type' => ['name' => _META_('weibotui.weibo.type'), 'type' => 'text', 'max' => 20, 'required' => true, 'enum' => new WeiboType(), 'db_insert' => true],
                    'user' => ['name' => _META_('weibotui.weibo.user'), 'type' => 'int', 'length' => 10, 'min' => 100000],
                    'gender' => ['name' => _META_('weibotui.weibo.gender'), 'type' => 'text', 'max' => 20, 'required' => true, 'enum' => new Gender(), 'db_insert' => true],
                ],
                [
                    'auto_uuid' => 'weibo_id',
                    'create_timestamp' => '_created_at',
                    'update_timestamp' => '_updated_at',
                    'unique_keys' => [['type', 'uid']],
                ],
                [
                    'user' => self::WITH_USER,
                ],
                [
                    'weibo_topic' => ['weibo_id', 'weibo', false, 'catetory', 'topic_category', 'code'],
                ],
                [
                    Model::OP_CREATE => NULL,
                    Model::OP_GET => NULL,
                    Model::OP_UPDATE => NULL,
                    Model::OP_DELETE => NULL,
                ]
            );
        }

        return self::$__metadata;
    }

    public function __construct($condition = null)
    {
        parent::__construct(self::s_metadata());

        if (isset($condition))
        {
            $this->load($condition);
        }
        else
        {
            $this->reset();
        }
    }

    /**
     * Gets uuid
     * @return string
     */
    public function getWeiboID()
    {
        return $this->__get(self::WEIBO_ID);
    }

    /**
     * Sets uuid
     * @param string $value
     * @return Weibo
     */
    public function setWeiboID($value)
    {
        $this->__set(self::WEIBO_ID, $value);

        return $this;
    }

    /**
     * Gets createdat
     * @return string
     */
    public function getCreatedAt()
    {
        return $this->__get(self::_CREATED_AT);
    }

    /**
     * Sets createdat
     * @param string $value
     * @return Weibo
     */
    public function setCreatedAt($value)
    {
        $this->__set(self::_CREATED_AT, $value);

        return $this;
    }

    /**
     * Gets updatedat
     * @return string
     */
    public function getUpdatedAt()
    {
        return $this->__get(self::_UPDATED_AT);
    }

    /**
     * Sets updatedat
     * @param string $value
     * @return Weibo
     */
    public function setUpdatedAt($value)
    {
        $this->__set(self::_UPDATED_AT, $value);

        return $this;
    }

    /**
     * Gets 微博id
     * @return string
     */
    public function getUID()
    {
        return $this->__get(self::UID);
    }

    /**
     * Sets 微博id
     * @param string $value
     * @return Weibo
     */
    public function setUID($value)
    {
        $this->__set(self::UID, $value);

        return $this;
    }

    /**
     * Gets 名称
     * @return string
     */
    public function getDisplayName()
    {
        return $this->__get(self::DISPLAY_NAME);
    }

    /**
     * Sets 名称
     * @param string $value
     * @return Weibo
     */
    public function setDisplayName($value)
    {
        $this->__set(self::DISPLAY_NAME, $value);

        return $this;
    }

    /**
     * Gets 微博url
     * @return string
     */
    public function getUrl()
    {
        return $this->__get(self::URL);
    }

    /**
     * Sets 微博url
     * @param string $value
     * @return Weibo
     */
    public function setUrl($value)
    {
        $this->__set(self::URL, $value);

        return $this;
    }

    /**
     * Gets 小头像
     * @return string
     */
    public function getAvatarS()
    {
        return $this->__get(self::AVATAR_S);
    }

    /**
     * Sets 小头像
     * @param string $value
     * @return Weibo
     */
    public function setAvatarS($value)
    {
        $this->__set(self::AVATAR_S, $value);

        return $this;
    }

    /**
     * Gets 大头像
     * @return string
     */
    public function getAvatarL()
    {
        return $this->__get(self::AVATAR_L);
    }

    /**
     * Sets 大头像
     * @param string $value
     * @return Weibo
     */
    public function setAvatarL($value)
    {
        $this->__set(self::AVATAR_L, $value);

        return $this;
    }

    /**
     * Gets 位置
     * @return string
     */
    public function getLocation()
    {
        return $this->__get(self::LOCATION);
    }

    /**
     * Sets 位置
     * @param string $value
     * @return Weibo
     */
    public function setLocation($value)
    {
        $this->__set(self::LOCATION, $value);

        return $this;
    }

    /**
     * Gets 简介
     * @return string
     */
    public function getDescription()
    {
        return $this->__get(self::DESCRIPTION);
    }

    /**
     * Sets 简介
     * @param string $value
     * @return Weibo
     */
    public function setDescription($value)
    {
        $this->__set(self::DESCRIPTION, $value);

        return $this;
    }

    /**
     * Gets 微博档案
     * @return string
     */
    public function getProfile()
    {
        return $this->__get(self::PROFILE);
    }

    /**
     * Sets 微博档案
     * @param string $value
     * @return Weibo
     */
    public function setProfile($value)
    {
        $this->__set(self::PROFILE, $value);

        return $this;
    }

    /**
     * Gets 微博推主页
     * @return string
     */
    public function getWBTHome()
    {
        return $this->__get(self::WBT_HOME);
    }

    /**
     * Sets 微博推主页
     * @param string $value
     * @return Weibo
     */
    public function setWBTHome($value)
    {
        $this->__set(self::WBT_HOME, $value);

        return $this;
    }

    /**
     * Gets 粉丝
     * @return int
     */
    public function getNumFollower()
    {
        return $this->__get(self::NUM_FOLLOWER);
    }

    /**
     * Sets 粉丝
     * @param int $value
     * @return Weibo
     */
    public function setNumFollower($value)
    {
        $this->__set(self::NUM_FOLLOWER, $value);

        return $this;
    }

    /**
     * Gets 关注
     * @return int
     */
    public function getNumFollowing()
    {
        return $this->__get(self::NUM_FOLLOWING);
    }

    /**
     * Sets 关注
     * @param int $value
     * @return Weibo
     */
    public function setNumFollowing($value)
    {
        $this->__set(self::NUM_FOLLOWING, $value);

        return $this;
    }

    /**
     * Gets 博文
     * @return int
     */
    public function getNumPost()
    {
        return $this->__get(self::NUM_POST);
    }

    /**
     * Sets 博文
     * @param int $value
     * @return Weibo
     */
    public function setNumPost($value)
    {
        $this->__set(self::NUM_POST, $value);

        return $this;
    }

    /**
     * Gets 赞
     * @return int
     */
    public function getNumLike()
    {
        return $this->__get(self::NUM_LIKE);
    }

    /**
     * Sets 赞
     * @param int $value
     * @return Weibo
     */
    public function setNumLike($value)
    {
        $this->__set(self::NUM_LIKE, $value);

        return $this;
    }

    /**
     * Gets 微博类型
     * @return string
     */
    public function getType()
    {
        return $this->__get(self::TYPE);
    }

    /**
     * Gets 微博类型 display name
     * @return string
     */
    public function getType_EnumValue()
    {
        $option = $this->metadata()->getFilterOption('type');
        return $option['enum']::getDisplayName($this->__get(self::TYPE));
    }

    /**
     * Sets 微博类型
     * @param string $value
     * @return Weibo
     */
    public function setType($value)
    {
        $this->__set(self::TYPE, $value);

        return $this;
    }

    /**
     * Gets 用户
     * @return int
     */
    public function getUser()
    {
        return $this->__get(self::USER);
    }

    /**
     * Sets 用户
     * @param int $value
     * @return Weibo
     */
    public function setUser($value)
    {
        $this->__set(self::USER, $value);

        return $this;
    }

    /**
     * Gets 性别
     * @return string
     */
    public function getGender()
    {
        return $this->__get(self::GENDER);
    }

    /**
     * Gets 性别 display name
     * @return string
     */
    public function getGender_EnumValue()
    {
        $option = $this->metadata()->getFilterOption('gender');
        return $option['enum']::getDisplayName($this->__get(self::GENDER));
    }

    /**
     * Sets 性别
     * @param string $value
     * @return Weibo
     */
    public function setGender($value)
    {
        $this->__set(self::GENDER, $value);

        return $this;
    }

    /**
     * @param bool $new
     * @return \WBT\Model\Weibotui\User
     */
    public function getUser_($new = false)
    {
        if ($new)
        {
            return new \WBT\Model\Weibotui\User();
        }

        if (isset($this->_links['user']))
        {
            return $this->_links['user'];
        }

        return ($this->_links['user'] = new \WBT\Model\Weibotui\User($this->getUser()));
    }
}
?>