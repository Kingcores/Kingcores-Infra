<?php
//Don't edit this file which is generated by Bluefin Lance.
namespace WBT\Model\Weibotui;

use Bluefin\Convention;
use Bluefin\Data\ValidatorInterface;

class WeiboType implements ValidatorInterface
{
    const WEIBO = 'weibo';
    const QQ_WEIBO = 'qq_weibo';
    const NETEASE = 'netease';
    const SOHU = 'sohu';
    const RENREN = 'renren';

    private static $_data;

    public static function getDictionary()
    {
        if (!isset(self::$_data))
        {
            self::$_data = array(
                self::WEIBO => _META_('weibotui.weibo_type.weibo'),
                self::QQ_WEIBO => _META_('weibotui.weibo_type.qq_weibo'),
                self::NETEASE => _META_('weibotui.weibo_type.netease'),
                self::SOHU => _META_('weibotui.weibo_type.sohu'),
                self::RENREN => _META_('weibotui.weibo_type.renren'),
            );
        }

        return self::$_data;
    }

    public static function getValues()
    {
        $data = self::getDictionary();
        return array_keys($data);
    }

    public static function getDisplayName($value)
    {
        $data = self::getDictionary();
        return $data[$value];
    }

    public static function getDefaultValue()
    {
        return self::WEIBO;
    }

    public function validate($value)
    {
        $data = self::getDictionary();
        return array_key_exists($value, $data);
    }
}