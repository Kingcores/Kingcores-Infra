<?php
//Don't edit this file which is generated by Bluefin Lance.
namespace WBT\Model\Weibotui;

use Bluefin\Convention;
use Bluefin\Data\ValidatorInterface;

class ProvinceType implements ValidatorInterface
{
    const PROVINCE = 'province';
    const AUTONOMOUS_REGION = 'autonomous_region';
    const DGC = 'dgc';
    const SAR = 'sar';
    const STATE = 'state';

    private static $_data;

    public static function getDictionary()
    {
        if (!isset(self::$_data))
        {
            self::$_data = array(
                self::PROVINCE => _META_('weibotui.province_type.province'),
                self::AUTONOMOUS_REGION => _META_('weibotui.province_type.autonomous_region'),
                self::DGC => _META_('weibotui.province_type.dgc'),
                self::SAR => _META_('weibotui.province_type.sar'),
                self::STATE => _META_('weibotui.province_type.state'),
            );
        }

        return self::$_data;
    }

    public static function getValues()
    {
        $data = self::getDictionary();
        return array_keys($data);
    }

    public static function getDisplayName($value)
    {
        $data = self::getDictionary();
        return $data[$value];
    }

    public static function getDefaultValue()
    {
        return self::PROVINCE;
    }

    public function validate($value)
    {
        $data = self::getDictionary();
        return array_key_exists($value, $data);
    }
}