<?php
//Don't edit this file which is generated by Bluefin Lance.
//You can put custom business logic into a Business class under WBT\Business namespace.
namespace WBT\Model\Weibotui;

use Bluefin\App;
use Bluefin\Convention;
use Bluefin\VarText;
use Bluefin\Data\Type;
use Bluefin\Data\Model;
use Bluefin\Data\Database;
use Bluefin\Data\ModelMetadata;
use Bluefin\Data\DbExpr;

class OAuthToken extends Model
{
    const _CREATED_AT = '_created_at';
    const ACCESS_TOKEN = 'access_token';
    const EXPIRES = 'expires';
    const SCOPE = 'scope';
    const SESSION_DATA = 'session_data';
    const CLIENT = 'client';
    const USER = 'user';

    const WITH_CLIENT = 'oauth_token.client:oauth_client.oauth_client_id';
    const WITH_USER = 'oauth_token.user:user.user_id';


    protected static $__metadata;

    /**
     * @static
     * @return \Bluefin\Data\ModelMetadata
     */
    public static function s_metadata()
    {
        if (!isset(self::$__metadata))
        {
            self::$__metadata = new ModelMetadata(
                'weibotui',
                'oauth_token',
                'access_token',
                [
                    '_created_at' => ['name' => _META_('weibotui.oauth_token._created_at'), 'type' => 'timestamp', 'required' => true, 'default' => new DbExpr('NOW()'), 'roc' => true, 'rou' => true],
                    'access_token' => ['name' => _META_('weibotui.oauth_token.access_token'), 'type' => 'text', 'length' => 40, 'required' => true],
                    'expires' => ['name' => _META_('weibotui.oauth_token.expires'), 'type' => 'datetime', 'required' => true],
                    'scope' => ['name' => _META_('weibotui.oauth_token.scope'), 'type' => 'text', 'max' => 1000],
                    'session_data' => ['name' => _META_('weibotui.oauth_token.session_data'), 'type' => 'json'],
                    'client' => ['name' => _META_('weibotui.oauth_token.client'), 'type' => 'int', 'length' => 10, 'min' => 10000, 'required' => true],
                    'user' => ['name' => _META_('weibotui.oauth_token.user'), 'type' => 'int', 'length' => 10, 'min' => 100000],
                ],
                [
                    'create_timestamp' => '_created_at',
                ],
                [
                    'client' => self::WITH_CLIENT,
                    'user' => self::WITH_USER,
                ],
                [
                ],
                [
                    Model::OP_CREATE => NULL,
                    Model::OP_GET => NULL,
                    Model::OP_UPDATE => NULL,
                    Model::OP_DELETE => NULL,
                ]
            );
        }

        return self::$__metadata;
    }

    public function __construct($condition = null)
    {
        parent::__construct(self::s_metadata());

        if (isset($condition))
        {
            $this->load($condition);
        }
        else
        {
            $this->reset();
        }
    }

    /**
     * Gets createdat
     * @return string
     */
    public function getCreatedAt()
    {
        return $this->__get(self::_CREATED_AT);
    }

    /**
     * Sets createdat
     * @param string $value
     * @return OAuthToken
     */
    public function setCreatedAt($value)
    {
        $this->__set(self::_CREATED_AT, $value);

        return $this;
    }

    /**
     * Gets 访问令牌
     * @return string
     */
    public function getAccessToken()
    {
        return $this->__get(self::ACCESS_TOKEN);
    }

    /**
     * Sets 访问令牌
     * @param string $value
     * @return OAuthToken
     */
    public function setAccessToken($value)
    {
        $this->__set(self::ACCESS_TOKEN, $value);

        return $this;
    }

    /**
     * Gets 有效期
     * @return string
     */
    public function getExpires()
    {
        return $this->__get(self::EXPIRES);
    }

    /**
     * Sets 有效期
     * @param string $value
     * @return OAuthToken
     */
    public function setExpires($value)
    {
        $this->__set(self::EXPIRES, $value);

        return $this;
    }

    /**
     * Gets 授权范围
     * @return string
     */
    public function getScope()
    {
        return $this->__get(self::SCOPE);
    }

    /**
     * Sets 授权范围
     * @param string $value
     * @return OAuthToken
     */
    public function setScope($value)
    {
        $this->__set(self::SCOPE, $value);

        return $this;
    }

    /**
     * Gets 会话数据
     * @return string
     */
    public function getSessionData()
    {
        return $this->__get(self::SESSION_DATA);
    }

    /**
     * Sets 会话数据
     * @param string $value
     * @return OAuthToken
     */
    public function setSessionData($value)
    {
        $this->__set(self::SESSION_DATA, $value);

        return $this;
    }

    /**
     * Gets oauth客户
     * @return int
     */
    public function getClient()
    {
        return $this->__get(self::CLIENT);
    }

    /**
     * Sets oauth客户
     * @param int $value
     * @return OAuthToken
     */
    public function setClient($value)
    {
        $this->__set(self::CLIENT, $value);

        return $this;
    }

    /**
     * Gets 用户
     * @return int
     */
    public function getUser()
    {
        return $this->__get(self::USER);
    }

    /**
     * Sets 用户
     * @param int $value
     * @return OAuthToken
     */
    public function setUser($value)
    {
        $this->__set(self::USER, $value);

        return $this;
    }

    /**
     * @param bool $new
     * @return \WBT\Model\Weibotui\OAuthClient
     */
    public function getClient_($new = false)
    {
        if ($new)
        {
            return new \WBT\Model\Weibotui\OAuthClient();
        }

        if (isset($this->_links['client']))
        {
            return $this->_links['client'];
        }

        return ($this->_links['client'] = new \WBT\Model\Weibotui\OAuthClient($this->getClient()));
    }

    /**
     * @param bool $new
     * @return \WBT\Model\Weibotui\User
     */
    public function getUser_($new = false)
    {
        if ($new)
        {
            return new \WBT\Model\Weibotui\User();
        }

        if (isset($this->_links['user']))
        {
            return $this->_links['user'];
        }

        return ($this->_links['user'] = new \WBT\Model\Weibotui\User($this->getUser()));
    }
}
?>