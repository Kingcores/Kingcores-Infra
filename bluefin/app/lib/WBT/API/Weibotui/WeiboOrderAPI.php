<?php
//Don't edit this file which is generated by Bluefin Lance.
namespace WBT\API\Weibotui;

use Bluefin\App;
use Bluefin\Common;
use Bluefin\Service;
use Bluefin\Data\Model;
use Bluefin\Data\Database;

use WBT\Model\Weibotui\WeiboOrderStatus;
use WBT\Model\Weibotui\WeiboOrder;

class WeiboOrderAPI extends Service
{
    public function create()
    {
        $aclStatus = WeiboOrder::checkActionPermission(Model::OP_CREATE);
        if ($aclStatus !== Model::ACL_ACCEPTED)
        {
            throw new \Bluefin\Exception\RequestException(null, $aclStatus);
        }

        $weiboOrder = new WeiboOrder();
        $weiboOrder->reset($this->_app->request()->getPostParams());
        return $weiboOrder->insert();
    }

    public function get(array $condition, array &$outputColumns = null, array &$paging = null)
    {
        $aclStatus = WeiboOrder::checkActionPermission(Model::OP_GET);

        if ($aclStatus !== Model::ACL_ACCEPTED)
        {
            throw new \Bluefin\Exception\RequestException(null, $aclStatus);
        }

        return WeiboOrder::fetchRowsWithCount(
            $outputColumns,
            $condition,
            null,
            $orderBy,
            $paging,
            $outputColumns
        );
    }


    public function doPublish($weiboOrderID)
    {
        WeiboOrder::doPublish($weiboOrderID, $this->_app->request()->getPostParams());

        return 1;
    }

    public function doCancel($weiboOrderID)
    {
        WeiboOrder::doCancel($weiboOrderID, $this->_app->request()->getPostParams());

        return 1;
    }

    public function doAccept($weiboOrderID)
    {
        WeiboOrder::doAccept($weiboOrderID, $this->_app->request()->getPostParams());

        return 1;
    }

    public function doRefuse($weiboOrderID)
    {
        WeiboOrder::doRefuse($weiboOrderID, $this->_app->request()->getPostParams());

        return 1;
    }

    public function doExpire($weiboOrderID)
    {
        WeiboOrder::doExpire($weiboOrderID, $this->_app->request()->getPostParams());

        return 1;
    }

    public function doSubmit($weiboOrderID)
    {
        WeiboOrder::doSubmit($weiboOrderID, $this->_app->request()->getPostParams());

        return 1;
    }

    public function doConfirm($weiboOrderID)
    {
        WeiboOrder::doConfirm($weiboOrderID, $this->_app->request()->getPostParams());

        return 1;
    }

    public function doAppeal($weiboOrderID)
    {
        WeiboOrder::doAppeal($weiboOrderID, $this->_app->request()->getPostParams());

        return 1;
    }

    public function doAutoPay($weiboOrderID)
    {
        WeiboOrder::doAutoPay($weiboOrderID, $this->_app->request()->getPostParams());

        return 1;
    }

    public function doProcess($weiboOrderID)
    {
        WeiboOrder::doProcess($weiboOrderID, $this->_app->request()->getPostParams());

        return 1;
    }

    public function doMarkQuolified($weiboOrderID)
    {
        WeiboOrder::doMarkQuolified($weiboOrderID, $this->_app->request()->getPostParams());

        return 1;
    }

    public function doMarkBad($weiboOrderID)
    {
        WeiboOrder::doMarkBad($weiboOrderID, $this->_app->request()->getPostParams());

        return 1;
    }

    public function doPayAfterQuolified($weiboOrderID)
    {
        WeiboOrder::doPayAfterQuolified($weiboOrderID, $this->_app->request()->getPostParams());

        return 1;
    }
}
?>