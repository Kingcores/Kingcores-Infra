<?php
//Don't edit this file which is generated by Bluefin Lance.
namespace {{ schema.getNamespace }}\Model\{{ schema.getSchemaNamePascal }};

use Bluefin\Convention;
use Bluefin\Data\ValidatorInterface;

class {{ entity.getCodeNamePascal }} implements ValidatorInterface
{
{% for enumName, enumValue in entity.getData %}
    const {{ enumName|const }} = '{{ enumName }}';
{% endfor %}

    private static $_data;

    public static function getDictionary()
    {
        if (!isset(self::$_data))
        {
            self::$_data = array(
{% for enumName, enumValue in entity.getData %}
                self::{{ enumName|const }} => _META_('{{ entity.getFullCodeName }}.{{ enumName }}'),
{% endfor %}
            );
        }

        return self::$_data;
    }

    public static function getValues()
    {
        $data = self::getDictionary();
        return array_keys($data);
    }

    public static function getDisplayName($value)
    {
        $data = self::getDictionary();
        return $data[$value];
    }

    public static function getDefaultValue()
    {
        return self::{{ entity.getEnumDefaultValue|const }};
    }

    public function validate($value)
    {
        $data = self::getDictionary();
        return array_key_exists($value, $data);
    }
}